name: AKS Integration Tests

on:
  push:
    branches: [ "aks" ]
  pull_request:
    branches: [ "aks" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  AZURE_HTTP_USER_AGENT: github-actions-azure-login

jobs:
  Authorize:
    environment: ${{ github.event_name == 'pull_request_target' && github.event.pull_request.head.repo.full_name != github.repository && 'external' || 'internal' }}
    runs-on: ubuntu-latest
    steps:
      - run: true

  Run-Integration-Tests-AKS:
    runs-on: ubuntu-latest
    needs: Authorize
    strategy:
      matrix:
        python-version: ["3.11"]
        airflow-version: ["2.9"]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha || github.ref }}

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            .nox
          key: integration-${{ runner.os }}-${{ matrix.python-version }}-${{ matrix.airflow-version }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('ray_provider/__init__.py') }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install packages and dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install hatch
          hatch -e tests.py${{ matrix.python-version }}-${{ matrix.airflow-version }} run pip freeze

      - name: 'Azure login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}

      - name: 'Set up Azure CLI'
        uses: azure/CLI@v1

      - name: Generate unique cluster name
        id: cluster-name
        run: echo "name=test-${GITHUB_RUN_ID:0:12}" >> $GITHUB_OUTPUT

      - name: Create AKS cluster
        timeout-minutes: 20
        run: |
          az aks create \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --name ${{ steps.cluster-name.outputs.name }} \
            --node-count 1 \
            --node-vm-size Standard_DS2_v2 \
            --enable-cluster-autoscaler \
            --min-count 1 \
            --max-count 3 \
            --generate-ssh-keys

      - name: Get AKS credentials
        run: |
          az aks get-credentials \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --name ${{ steps.cluster-name.outputs.name }} \
            --file kubeconfig.yaml
          echo "KUBECONFIG=${{ github.workspace }}/kubeconfig.yaml" >> $GITHUB_ENV

      - name: Run integration tests
        timeout-minutes: 30
        run: |
          hatch run tests.py${{ matrix.python-version }}-${{ matrix.airflow-version }}:test-integration

      - name: Upload coverage to Github
        uses: actions/upload-artifact@v4
        with:
          name: coverage-integration-test-${{ matrix.python-version }}-${{ matrix.airflow-version }}
          path: .coverage

      - name: Delete AKS cluster
        if: always()
        run: |
          az aks delete \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --name ${{ steps.cluster-name.outputs.name }} \
            --yes
