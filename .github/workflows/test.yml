name: test
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  Authorize:
    environment: ${{ github.event_name == 'pull_request_target' && github.event.pull_request.head.repo.full_name != github.repository && 'external' || 'internal' }}
    runs-on: ubuntu-latest
    steps:
      - run: true

  Static-Check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha || github.ref }}
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          architecture: "x64"
      - run: pip3 install hatch
      - run: hatch run tests.py3.11-2.9:static-check

  Run-Unit-Tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
        airflow-version: ["2.7", "2.8", "2.9"]
        exclude:
          - python-version: "3.12"
            airflow-version: "2.7"
          - python-version: "3.12"
            airflow-version: "2.8"
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha || github.ref }}
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            .nox
          key: unit-${{ runner.os }}-${{ matrix.python-version }}-${{ matrix.airflow-version }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('ray_provider/__init__.py') }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install packages and dependencies
        run: |
          python -m pip install hatch
          hatch -e tests.py${{ matrix.python-version }}-${{ matrix.airflow-version }} run pip freeze
      - name: Test Ray against Airflow ${{ matrix.airflow-version }} and Python ${{ matrix.python-version }}
        run: |
          hatch run tests.py${{ matrix.python-version }}-${{ matrix.airflow-version }}:test-cov
      - name: Upload coverage to Github
        uses: actions/upload-artifact@v4
        with:
          name: coverage-unit-test-${{ matrix.python-version }}-${{ matrix.airflow-version }}
          path: .coverage

  Run-Integration-Tests:
    needs: Authorize
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
        airflow-version: ["2.9"]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha || github.ref }}
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            .nox
          key: integration-${{ runner.os }}-${{ matrix.python-version }}-${{ matrix.airflow-version }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('ray_provider/__init__.py') }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install packages and dependencies
        run: |
          python -m pip install hatch
          hatch -e tests.py${{ matrix.python-version }}-${{ matrix.airflow-version }} run pip freeze
      - name: Set up Helm
        uses: azure/setup-helm@v4.2.0
        with:
          version: v3.14.4
      - name: Kubernetes KinD Cluster
        uses: container-tools/kind-action@v1
        with:
          cluster_name : integration-test
          cpu: 10

      - name: Get kubeconfig and run integration tests
        run: |
          # Read the kubeconfig created by KinD
          export KUBECONFIG="${HOME}/.kube/config"
          echo "KUBECONFIG is set to: $KUBECONFIG"
          ls -l $KUBECONFIG
          cat $KUBECONFIG

          # Pass the KUBECONFIG as an environment variable to pytest
          KUBECONFIG=$KUBECONFIG
          hatch run tests.py${{ matrix.python-version }}-${{ matrix.airflow-version }}:test-integration
      - name: Upload coverage to Github
        uses: actions/upload-artifact@v4
        with:
          name: coverage-integration-test-${{ matrix.python-version }}-${{ matrix.airflow-version }}
          path: .coverage
